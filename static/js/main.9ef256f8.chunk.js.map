{"version":3,"sources":["web3.jsx","Main.jsx","App.jsx","serviceWorker.js","index.js","sai.svg"],"names":["ethers","require","window","eth","providers","InfuraProvider","formatCurr","Intl","NumberFormat","style","currency","minimumFractionDigits","formatAmount","Main","props","daiSupply","cap","ethSupply","wethSupply","fee","ethUsd","pethSupply","mkrUsd","lockedWeth","lockedPeth","gemPit","mkrRoi","document","title","format","className","etherscanSupply","a","fetch","then","res","json","utils","formatEther","result","addresses","mkr","pit","dai","pip","pep","tub","peth","weth","tokenAbi","valueAbi","tubAbi","Contract","App","state","blockNumber","blockHash","isLoaded","startEvents","init","Promise","all","doDaiSupply","doCap","doEthSupply","doLockedWeth","doWethSupply","doEthUsd","doMkrUsd","doGemPit","doTubData","setState","doMkrRoi","balanceOf","pie","doLockedPeth","air","totalSupply","doPethSupply","read","value","parseFloat","formatUnits","this","setInterval","mkrSupply","src","saiLogo","alt","max","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9ef256f8.chunk.js","sourcesContent":["const ethers = require('ethers')\nwindow.ethers = ethers\nconst eth = new ethers.providers.InfuraProvider('homestead','4525cb9262b24bbcaf6ac079efd887bf')\nexport default eth\n","import React from 'react'\n\nconst formatCurr = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2\n})\n\nconst formatAmount = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 2\n})\n\nconst Main = (props) => {\n  const { daiSupply, cap, ethSupply, wethSupply, fee, pethSupply, ethUsd, mkrUsd, lockedPeth, lockedWeth, gemPit, mkrRoi } = props\n  document.title = `Sai Stats - ${formatAmount.format(daiSupply)}`\n  return (\n    <div>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={daiSupply}>{formatAmount.format(daiSupply)}</h3>\n                <p className=\"subtitle is-size-4\">Sai Supply</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={cap}>{formatAmount.format(cap)}</h3>\n                <p className=\"subtitle is-size-4\">Debt Ceiling</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={ethUsd * lockedWeth / daiSupply * 100}>{formatAmount.format(ethUsd * lockedWeth / daiSupply * 100)} %</h3>\n                <p className=\"subtitle is-size-4\">Collat. Ratio</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n          <div className=\"column\">\n            <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={lockedWeth}>{formatAmount.format(lockedWeth)}</h3>\n                <p className=\"subtitle is-size-4\">ETH Locked</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={ethSupply}>{formatAmount.format(ethSupply)}</h3>\n                <p className=\"subtitle is-size-4\">Total ETH Supply</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={lockedWeth / ethSupply * 100}>{formatAmount.format(lockedWeth / ethSupply * 100)} %</h3>\n                <p className=\"subtitle is-size-4\">% ETH Locked</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={ethUsd * lockedWeth}>{formatCurr.format(ethUsd * lockedWeth)}</h3>\n                <p className=\"subtitle is-size-4\">Value Locked in USD</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={wethSupply}>{formatAmount.format(wethSupply)}</h3>\n                <p className=\"subtitle is-size-4\">Total WETH Supply</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={lockedWeth / wethSupply * 100}>{formatAmount.format(lockedWeth / wethSupply * 100)} %</h3>\n                <p className=\"subtitle is-size-4\">% WETH Locked</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={ethUsd}>{formatCurr.format(ethUsd)}</h3>\n                <p className=\"subtitle is-size-4\">ETH Price</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={mkrUsd}>{formatCurr.format(mkrUsd)}</h3>\n                <p className=\"subtitle is-size-4\">MKR Price</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={fee}>{formatAmount.format(fee)} %</h3>\n                <p className=\"subtitle is-size-4\">Stability Fee</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\">{formatAmount.format(mkrRoi)} %</h3>\n                <p className=\"subtitle is-size-4\">MKR ROI</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={gemPit}>{formatAmount.format(gemPit)}</h3>\n                <p className=\"subtitle is-size-4\">MKR in Burner</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={gemPit * mkrUsd}>{formatCurr.format(gemPit * mkrUsd)}</h3>\n                <p className=\"subtitle is-size-4\">Burner in USD</p>\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <p className=\"\">\n                  Current block: {props.blockNumber}\n                </p>\n              </div>\n            </div>\n          </div> */}\n          {/* <p>{formatAmount.format(ethUsd * lockedWeth / daiSupply * 100)}</p> */}\n          {/* <div className=\"columns\">\n              <div className=\"column\">\n                <p>ethUsd: {formatCurr.format(ethUsd)}</p>\n                <p>value: {formatCurr.format(lockedWeth * ethUsd)}</p>\n                <p>wethSupply: {formatAmount.format(wethSupply)}</p>\n                <p>% {lockedWeth / wethSupply * 100}</p>\n                <p>pethSupply: {formatAmount.format(pethSupply)}</p>\n                <p>lockedPeth: {formatAmount.format(lockedPeth)}</p>\n                <p>% {lockedWeth / ethSupply * 100}</p>\n                <p>PETH/ETH Ratio: {lockedWeth / pethSupply}</p>\n                <p>Current block: {this.state.blockNumber}</p>\n                <p><button onClick={this.doLockedWeth}>Zomg</button></p>\n              </div>\n            </div> */}\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport eth from './web3';\nimport Main from './Main'\nimport saiLogo from './sai.svg'\nconst ethers = require('ethers')\n\nconst jsonFetch = url => fetch(url).then(res => res.json())\nconst etherscanSupply = async () => {\n  const json = await jsonFetch('https://api.etherscan.io/api?action=ethsupply&module=stats&apikey=N5TICDBVG4MHDS7CGPJ9MHXRYC1Y84963N')\n  return ethers.utils.formatEther(json.result)\n}\n\nconst addresses = {\n  mkr: '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',\n  pit: '0x69076e44a9C70a67D5b79d95795Aba299083c275',\n  dai: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359',\n  pip: '0x729D19f657BD0614b4985Cf1D82531c67569197B',\n  pep: '0x99041F808D598B782D5a3e498681C2452A31da08',\n  tub: '0x448a5065aeBB8E423F0896E6c5D525C040f59af3',\n  peth: '0xf53AD2c6851052A81B42133467480961B2321C09',\n  weth: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'\n}\nwindow.addresses = addresses\n\nconst tokenAbi = require('./abi/token.json')\nconst valueAbi = require('./abi/value.json')\nconst tubAbi = require('./abi/tub.json')\nconst dai = new ethers.Contract(addresses.dai, tokenAbi, eth)\nconst peth = new ethers.Contract(addresses.peth, tokenAbi, eth)\nconst mkr = new ethers.Contract(addresses.mkr, tokenAbi, eth)\nconst weth = new ethers.Contract(addresses.weth, tokenAbi, eth)\nconst ethUsd = new ethers.Contract(addresses.pip, valueAbi, eth)\nconst mkrUsd = new ethers.Contract(addresses.pep, valueAbi, eth)\nconst tub = new ethers.Contract(addresses.tub, tubAbi, eth)\nwindow.dai = dai\nwindow.weth = weth\nwindow.tub = tub\nwindow.mkr = mkr\n\nclass App extends Component {\n  state = {\n    daiSupply: null,\n    cap: null,\n    ethSupply: null,\n    wethSupply: null,\n    ethUsd: null,\n    mkrUsd: null,\n    lockedPeth: null,\n    lockedWeth: null,\n    gemPit: null,\n    fee: null,\n    mkrRoi: null,\n    blockNumber: null,\n    blockHash: null,\n  }\n\n  isLoaded = () => {\n    return this.state.daiSupply !== null &&\n      this.state.ethSupply !== null &&\n      this.state.cap !== null &&\n      this.state.lockedWeth !== null &&\n      this.state.ethUsd !== null &&\n      this.state.gemPit !== null &&\n      this.state.mkrUsd !== null\n  }\n\n  componentDidMount() {\n    this.init()\n    setInterval(this.init, 60000)\n    // this.startEvents()\n  }\n\n  startEvents = async () => {\n    // weth.events.Transfer({}, (err, event) => {\n    //   console.log(event)\n    //   // console.log(web3.utils.fromWei(event.raw.data) + \" WETH unlocked at \" + event.transactionHash);\n    //   if (event.event === \"Transfer\" && event.returnValues.dst === addresses.tub) {\n    //     const { src, dst, wad } = event.returnValues\n    //     // console.log(web3.utils.fromWei(event.raw.data))\n    //     // console.log(`BOOM! ${web3.utils.fromWei(wad.toString())} moved into the tub!`)\n    //     setTimeout(this.doLockedWeth, 1000)\n    //   }\n    // })\n    // dai.events.allEvents({}, (err, event) => {\n    //   if (event.event === \"Transfer\") {\n    //     const { src, dst, wad } = event.returnValues\n    //     // console.log(`${web3.utils.fromWei(wad.toString())} moved from ${src} to ${dst}`)\n    //     window.lastEvent = event\n    //   } else if (event.event === \"Mint\" || event.event === \"Burn\") {\n    //     console.log(event.event + ' some Dai ' + web3.utils.fromWei(event.returnValues.wad))\n    //     setTimeout(this.doDaiSupply, 1000)\n    //   }\n    // })\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  init = async () => {\n    const all = await Promise.all([\n      this.doDaiSupply(),\n      this.doCap(),\n      this.doEthSupply(),\n      this.doLockedWeth(),\n      this.doWethSupply(),\n      // this.doPethSupply(),\n      // this.doLockedPeth(),\n      this.doEthUsd(),\n      this.doMkrUsd(),\n      this.doGemPit(),\n      this.doTubData(),\n    ])\n    this.setState({\n      daiSupply: all[0],\n      cap: all[1],\n      ethSupply: all[2],\n      lockedWeth: all[3],\n      wethSupply: all[4],\n      ethUsd: all[5],\n      mkrUsd: all[6],\n      gemPit: all[7],\n      fee: all[8],\n    })\n    const mkrRoi = await this.doMkrRoi()\n    this.setState({ mkrRoi })\n  }\n\n  doGemPit = async () => {\n    let gemPit = await mkr.balanceOf(addresses.pit)\n    return ethers.utils.formatEther(gemPit)\n  }\n\n  doLockedWeth = async () => {\n    let lockedWeth = await tub.pie()\n    return ethers.utils.formatEther(lockedWeth)\n  }\n\n  doLockedPeth = async () => {\n    let lockedPeth = await tub.air()\n    return ethers.utils.formatEther(lockedPeth)\n  }\n\n  doCap = async () => {\n    let cap = await tub.cap()\n    return ethers.utils.formatEther(cap)\n  }\n\n  doDaiSupply = async () => {\n    let daiSupply = await dai.totalSupply()\n    return ethers.utils.formatEther(daiSupply)\n  }\n\n  doWethSupply = async () => {\n    let wethSupply = await weth.totalSupply()\n    return ethers.utils.formatEther(wethSupply)\n  }\n\n  doPethSupply = async () => {\n    let pethSupply = await peth.totalSupply()\n    return ethers.utils.formatEther(pethSupply)\n  }\n\n  doEthSupply = async () => {\n    const ethSupply = await etherscanSupply()\n    return ethSupply\n  }\n\n  doEthUsd = async () => {\n    let value = await ethUsd.read()\n    return ethers.utils.formatEther(value)\n  }\n\n  doMkrUsd = async () => {\n    let value = await mkrUsd.read()\n    return ethers.utils.formatEther(value)\n  }\n\n  doTubData = async () => {\n    let fee = await tub.fee()\n    return parseFloat(ethers.utils.formatUnits(fee, 27)) ** (60*60*24*365) * 100 - 100\n  }\n\n  doMkrRoi() {\n    const mkrSupply = 1000000 - this.state.gemPit\n    const feesPerYear = this.state.fee / 100.0 * this.state.daiSupply\n    return feesPerYear / (this.state.mkrUsd * mkrSupply) * 100.0\n  }\n\n  render() {\n    if (this.isLoaded()) {\n      return (\n        <div>\n          <Main {...this.state} />\n        </div>\n      )\n    }\n    else\n    return (\n      <section className=\"section\">\n        <div className=\"container has-text-centered\">\n          <figure className=\"image is-128x128 container\">\n            <img src={saiLogo} alt=\"Sai Logo\" />\n          </figure>\n          <br />\n          <progress className=\"progress is-small is-primary\" max=\"100\">15%</progress>\n          <p>One sec, fetching data from Ethereum Mainnet</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sai.cfb65a48.svg\";"],"sourceRoot":""}